image: cirrusci/flutter:3.7.1

stages:
  - analyze
  - test
  - build
  - release

before_script:
  - flutter pub get

versioning:
  image: node:19
  stage: analyze
  before_script:
   - git checkout $CI_BUILD_REF_NAME
   - npm install release-it @release-it/conventional-changelog -g
  script: 
   - |
    if [[ $CI_BUILD_REF_NAME = "master" ]]
    then
      echo "BUILD_VERSION=$(release-it --ci --release-version | cut -d "-" -f 1)" >> version.env
      echo "BUILD_NUMBER=1000"  >> version.env
      echo "CHANGELOG=\"$(release-it --ci --changelog)\"" >> version.env
    elif [[ $CI_BUILD_REF_NAME = "staging" ]]
    then
      echo "BUILD_VERSION=$(release-it --ci --release-version --preRelease | cut -d "-" -f 1)" >> version.env
      echo "BUILD_NUMBER=$(release-it --ci --release-version --preRelease | cut -d "-" -f 2)"  >> version.env
      echo "CHANGELOG=\"$(release-it --ci --changelog)\"" >> version.env
    else
      echo "BUILD_VERSION=$(release-it --ci --release-version --preRelease | cut -d "-" -f 1)" >> version.env
      echo "BUILD_NUMBER=$(release-it --ci --release-version --preRelease | cut -d "-" -f 2)"  >> version.env
      echo "CHANGELOG=\"$(release-it --ci --changelog)\"" >> version.env
    fi
  only:
    - development
  artifacts:
   reports:
     dotenv: version.env

code_quality:
 stage: analyze
 before_script:
   - dart pub global activate dart_code_metrics
   - export PATH="$PATH:$HOME/.pub-cache/bin"
 script:
   - metrics lib -r codeclimate  > gl-code-quality-report.json
 artifacts:
   reports:
     codequality: gl-code-quality-report.json
 tags:
   - docker

lint:
 stage: analyze
 script:
   - flutter analyze
 tags:
   - docker

test:
 stage: test
 before_script:
   - dart pub global activate junitreport
   - export PATH="$PATH:$HOME/.pub-cache/bin"
 script:
   - flutter test --machine --coverage | tojunit -o report.xml
 artifacts:
   reports:
     junit: report.xml

 tags:
   - docker

build-to-android:
 stage: build
 before_script:
   - flutter pub get
   - flutter pub run build_runner build --delete-conflicting-outputs
 script:
   - echo ${KEYSTORE_BASE64} | base64 -d > /tmp/upload-keystore.jks
   - cp ${KEYFILE} ./android/key.properties
   - flutter build apk --release --dart-define=API_HOST=$API_HOST --build-name=$BUILD_VERSION --build-number=$BUILD_NUMBER
   - mv build/app/outputs/flutter-apk/app-release.apk app-release.apk
 artifacts:
   paths:
     - app-release.apk
 tags:
   - hard-work
   - docker
 needs:
   - versioning
 only:
   - development

build-to-ios:
  stage: build
  before_script:
    - flutter pub get
    - flutter pub run build_runner build --delete-conflicting-outputs
  script:
    - flutter build ipa --release --dart-define=API_HOST=$API_HOST --build-name=$BUILD_VERSION --build-number=$BUILD_NUMBER
    - mv build/ios/ipa/FITT.ipa app-release.ipa
  artifacts:
    paths:
      - app-release.ipa
  needs:
   - versioning
  only:
   - development
  tags:
   - ios
   - raw-shell

push-to-testflight:
  stage: release
  before_script: []
  only:
   - development
  script:
    - fastlane run testflight app_version:"$(BUILD_VERSION)" build_number:"$(BUILD_NUMBER)" changelog:"$(CHANGELOG)" ipa:"app-release.ipa"
  needs:
    - build-to-ios
 
push-to-google_play:
  stage: release
  before_script: []
  only:
   - development
  script:
    - fastlane run upload_to_play_store version_name:"$(BUILD_VERSION)" version_code:"$(BUILD_NUMBER)" track:"internal" apk:"app-release.apk"
  needs:
    - build-to-android