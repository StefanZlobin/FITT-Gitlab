image: cirrusci/flutter:3.7.1

stages:
  - analyze
  - test
  - code_generation
  - build
  - release

before_script:
  - flutter pub get

versioning:
  image: node:19
  stage: analyze
  before_script:
   - git checkout $CI_BUILD_REF_NAME
   - npm install release-it @release-it/conventional-changelog -g
  script: 
   - |
    if [[ $CI_BUILD_REF_NAME = "master" ]]
    then
      echo "BUILD_VERSION=$(release-it --ci --release-version)" >> version.env
    elif [[ $CI_BUILD_REF_NAME = "staging" ]]
    then
      echo "BUILD_VERSION=$(release-it --ci --preRelease=beta --release-version)" >> version.env
    else
      echo "BUILD_VERSION=$(release-it --ci --preRelease=dev --release-version)" >> version.env
    fi
  only:
    - master
    - development
    - staging
  artifacts:
   reports:
     dotenv: version.env

code_quality:
 stage: analyze
 before_script:
   - dart pub global activate dart_code_metrics
   - export PATH="$PATH:$HOME/.pub-cache/bin"
 script:
   - metrics lib -r codeclimate  > gl-code-quality-report.json
 artifacts:
   reports:
     codequality: gl-code-quality-report.json
 tags:
   - docker

lint:
 stage: analyze
 script:
   - flutter analyze
 tags:
   - docker

test:
 stage: test
 before_script:
   - dart pub global activate junitreport
   - export PATH="$PATH:$HOME/.pub-cache/bin"
 script:
   - flutter test --machine --coverage | tojunit -o report.xml
 artifacts:
   reports:
     junit: report.xml

 tags:
   - docker

.build-and-push-to-android:
 stage: build
 before_script:
   - flutter pub get
   - flutter pub run build_runner build --delete-conflicting-outputs
 script:
   - echo ${KEYSTORE_BASE64} | base64 -d > /upload-keystore.jks
   - cp ${KEYFILE} ./android/key.properties
   - flutter build apk --debug --dart-define=API_HOST=$API_HOST --build-name=$BUILD_VERSION
   - mv build/app/outputs/flutter-apk/app-debug.apk app-debug.apk
 artifacts:
   paths:
     - app-release.apk
 tags:
   - hard-work
   - docker
 needs:
   - versioning

build-and-push-to-android-test:
  extends: .build-and-push-to-android
  environment:
    name: test
  only:
    - development
  

build-and-push-to-android-preprod:
  extends: .build-and-push-to-android
  environment:
    name: preprod
  only:
    - master

# build-and-push-to-ios-test:
#   stage: build_ios
#   environment:
#     name: test
#   before_script:
#     - flutter pub get
#     - flutter pub run build_runner build --delete-conflicting-outputs
#   script:
#     - cd ios
#     - bundle exec fastlane match appstore
#     - pod install --repo-update
#     - bundle exec fastlane match appstore
#     - bundle exec fastlane test
#   only:
#     - development
#   tags:
#     - ios
#     - raw-shell


# build-and-push-to-ios-preprod:
#   stage: build_ios
#   environment:
#     name: preprod
#   before_script:
#     - flutter pub get
#     - flutter pub run build_runner build --delete-conflicting-outputs
#   script:
#     - cd ios
#     - pod install --repo-update
#     - bundle exec fastlane match appstore
#     - bundle exec fastlane preprod
#   only:
#     - master
#   tags:
#     - ios
#     - raw-shell
