image: cirrusci/flutter:3.7.1

stages:
  - prepare
  - analyze
  - test
  - build
  - release

variables:
  GIT_STRATEGY: clone
  GIT_DEPTH: 1

before_script:
  - flutter pub get

versioning:
  image: node:19
  stage: analyze
  variables:
     GIT_DEPTH: 100
     GIT_STRATEGY: clone
  before_script:
   - git checkout $CI_BUILD_REF_NAME
   - git pull
   - npm install release-it @release-it/conventional-changelog -g
  script: 
   - |
    if [[ $CI_BUILD_REF_NAME = "master" ]]
    then
      echo "BUILD_VERSION=$(release-it --ci --release-version | cut -d "-" -f 1)" >> version.env
      echo "ANDROID_TRACK=production"  >> version.env
      release-it --ci --changelog >> changelog.txt
    elif [[ $CI_BUILD_REF_NAME = "staging" ]]
    then
      echo "BUILD_VERSION=$(release-it --ci --release-version --preRelease | cut -d "-" -f 1)" >> version.env
      echo "ANDROID_TRACK=alfa"  >> version.env
      release-it --ci --changelog >> changelog.txt
    else
      echo "BUILD_VERSION=$(release-it --ci --release-version --preRelease | cut -d "-" -f 1)" >> version.env
      echo "ANDROID_TRACK=internal"  >> version.env
      release-it --ci --changelog >> changelog.txt
    fi
   - echo BUILD_NUMBER=$(echo "$ANDROID_BUILD_NUMBER\n$IOS_BUILD_NUMBER" | awk '{if(max==""){max=$1}; if($1>max) {max=$1}; } END {print max}') >> version.env
  only:
    - development
  needs:
   - code_vesions_ios
   - code_vesions_android
  artifacts:
   reports:
     dotenv: version.env

code_vesions_ios:
 stage: analyze
 before_script: ['flutter pub get']
 script:
   - cd ios
   - bundle install
   - bundle exec fastlane get_next_build_number | grep 'IOS_BUILD_NUMBER' >> ../build_number_ios.env
 artifacts:
   reports:
     dotenv: build_number_ios.env
 tags:
   - ios
   - raw-shell

code_vesions_android:
 stage: analyze
 before_script: ['flutter pub get']
 script:
   - cd android
   - bundle install
   - bundle exec fastlane get_next_build_number | grep 'ANDROID_BUILD_NUMBER' >> ../build_number_android.env
 artifacts:
   reports:
     dotenv: build_number_android.env
 tags:
   - docker

code_quality:
 stage: analyze
 before_script:
   - dart pub global activate dart_code_metrics
   - export PATH="$PATH:$HOME/.pub-cache/bin"
 script:
   - metrics lib -r codeclimate  > gl-code-quality-report.json
 artifacts:
   reports:
     codequality: gl-code-quality-report.json
 tags:
   - docker

lint:
 stage: analyze
 script:
   - flutter analyze
 tags:
   - docker

test:
 stage: test
 before_script:
   - dart pub global activate junitreport
   - export PATH="$PATH:$HOME/.pub-cache/bin"
 script:
   - flutter test --machine --coverage | tojunit -o report.xml
 artifacts:
   reports:
     junit: report.xml

 tags:
   - docker

build-to-android-aab:
 stage: build
 before_script:
   - echo ${KEYSTORE_BASE64} | base64 -d > /tmp/upload-keystore.jks
   - cd android
   - cp ${KEYFILE} ./key.properties
   - bundle install
 script:
   - bundle exec fastlane build_aab
   - cd ..
   - mv build/app/outputs/bundle/release/app-release.aab app-release.aab
 artifacts:
   paths:
     - app-release.aab
 tags:
   - hard-work
   - docker
 needs:
   - versioning
 only:
   - development

build-to-ios:
  stage: build
  before_script:
    - flutter channel stable
    - flutter upgrade
    - flutter pub get
    - cd ios
    - pod install --repo-update
    - cd ..
    - flutter pub run build_runner build --delete-conflicting-outputs
  script:
    - flutter build ipa --release --build-number=$BUILD_NUMBER --build-name=$BUILD_VERSION --dart-define=API_HOST=$API_HOST
    - mv build/ios/ipa/FITT.ipa app-release.ipa
  artifacts:
    paths:
      - app-release.ipa
  needs:
   - versioning
  only:
   - development
  tags:
   - ios
   - raw-shell

push-to-testflight:
  stage: release
  before_script: 
    - cd ios
    - bundle install
  script:
    - IPA_FILE=../app-release.ipa bundle exec fastlane to_testflight
  only:
   - development
  needs:
    - job: build-to-ios
      artifacts: true
    - job: versioning
      artifacts: true
  tags:
   - ios
   - raw-shell
 
push-to-google_play:
  stage: release
  before_script: 
    - cd android
    - bundle install
  script:
    - AAB_FILE=../app-release.aab bundle exec fastlane deploy track:$ANDROID_TRACK
  only:
   - development
  needs:
    - job: build-to-android-aab
      artifacts: true
    - job: versioning
      artifacts: true